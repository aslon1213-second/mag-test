// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/finance": {
            "post": {
                "description": "Add new financial records for a branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finance"
                ],
                "summary": "Create new finance for a branch",
                "parameters": [
                    {
                        "description": "Branch finance input",
                        "name": "branch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewBranchFinanceInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/finance/branch/id/{id}": {
            "get": {
                "description": "Retrieve a branch using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finance"
                ],
                "summary": "Fetch branch by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/finance/branch/name/{branch_name}": {
            "get": {
                "description": "Retrieve finance details using the branch name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finance"
                ],
                "summary": "Fetch finance by branch name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch Name",
                        "name": "branch_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/finance/branches": {
            "get": {
                "description": "Retrieve all branches from the finance collection",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finance"
                ],
                "summary": "Fetch all branches",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/finance/id/{id}": {
            "get": {
                "description": "Retrieve finance details using its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finance"
                ],
                "summary": "Fetch finance by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Finance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/journals": {
            "post": {
                "description": "Create a new journal entry for a branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "journals"
                ],
                "summary": "Create a new journal entry",
                "parameters": [
                    {
                        "description": "New Journal Entry Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NewJournalEntryInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Journal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/journals/branch/{branch_id}": {
            "get": {
                "description": "Query journal entries by branch ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "journals"
                ],
                "summary": "Query journal entries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Journal"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/journals/report": {
            "get": {
                "description": "Get a report of journal entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "journals"
                ],
                "summary": "Get a report",
                "responses": {}
            }
        },
        "/journals/{journal_id}": {
            "get": {
                "description": "Get a journal entry by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "journals"
                ],
                "summary": "Get a journal entry by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal ID",
                        "name": "journal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Journal"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/journals/{journal_id}/close": {
            "post": {
                "description": "Close a journal entry by updating its transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "journals"
                ],
                "summary": "Close a journal entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal ID",
                        "name": "journal_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Close Journal Entry Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CloseJournalEntryInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/journals/{journal_id}/operations": {
            "post": {
                "description": "Create a new transaction and update the journal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "operations",
                    "transactions"
                ],
                "summary": "Create a new operation transaction",
                "parameters": [
                    {
                        "description": "Transaction data",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JournalOperationInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Journal ID",
                        "name": "journal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/journals/{journal_id}/reopen": {
            "post": {
                "description": "Reopen a journal entry by removing its closing transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "journals"
                ],
                "summary": "Reopen a closed journal entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Journal ID",
                        "name": "journal_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/sales/{branch_id}": {
            "post": {
                "description": "Create a new sales transaction for a branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sales"
                ],
                "summary": "Create a new sales transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction details",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionBase"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/sales/{transaction_id}": {
            "delete": {
                "description": "Delete a sales transaction by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sales"
                ],
                "summary": "Delete a sales transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/suppliers": {
            "get": {
                "description": "Get all suppliers from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "Get all suppliers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Supplier INN",
                        "name": "inn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Supplier branch",
                        "name": "branch",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Supplier email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Supplier phone",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Supplier address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Supplier notes",
                        "name": "notes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new supplier in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "Create a new supplier",
                "parameters": [
                    {
                        "description": "Supplier data",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupplierBase"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/suppliers/{branch_id}/{supplier_id}/transactions": {
            "post": {
                "description": "Create a new transaction for a supplier and update financial records",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers",
                    "transactions"
                ],
                "summary": "Create a new transaction for a supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "supplier_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction data",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/suppliers/{id}": {
            "get": {
                "description": "Get a supplier by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "Get a supplier by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a supplier's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "Update a supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Supplier data",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SupplierBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a supplier from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "Delete a supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Output"
                        }
                    }
                }
            }
        },
        "/transactions/branch/{branch_id}": {
            "get": {
                "description": "Retrieve transactions based on various query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transactions by query parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Branch ID",
                        "name": "branch_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Minimum transaction amount",
                        "name": "amount_min",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum transaction amount",
                        "name": "amount_max",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Payment method",
                        "name": "payment_method",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type of transaction",
                        "name": "type_of_transaction",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Initiator type",
                        "name": "initiator_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimum date",
                        "name": "date_min",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum date",
                        "name": "date_max",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of transactions per page",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TransactionOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/transactions/docs/initiator_type": {
            "get": {
                "description": "Retrieve a list of all possible initiator types for transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get all initiator types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.InitiatorType"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/docs/payment_method": {
            "get": {
                "description": "Retrieve a list of all possible payment methods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get all payment methods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PaymentMethod"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/docs/type": {
            "get": {
                "description": "Retrieve a list of all possible transaction types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get all transaction types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransactionType"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "put": {
                "description": "Update transaction details by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Update a transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type of transaction",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\" : \"transaction was succesfully updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a transaction from the database by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Delete a transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\" : \"transaction was succesfully deleted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/transactions/{transaction_id}": {
            "get": {
                "description": "Retrieve a single transaction by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get a transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TransactionOutputSingle"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Branch": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.CloseJournalEntryInput": {
            "type": "object",
            "properties": {
                "cash_left": {
                    "type": "integer"
                },
                "terminal_income": {
                    "type": "integer"
                }
            }
        },
        "models.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.InitiatorType": {
            "type": "string",
            "enum": [
                "salary",
                "rent",
                "utilities",
                "other",
                "sale",
                "supplier"
            ],
            "x-enum-varnames": [
                "InitiatorTypeSalary",
                "InitiatorTypeRent",
                "InitiatorTypeUtilities",
                "InitiatorTypeOther",
                "InitiatorTypeSales",
                "InitiatorTypeSupplier"
            ]
        },
        "models.Journal": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/definitions/models.Branch"
                },
                "cash_left": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transaction"
                    }
                },
                "shift_is_closed": {
                    "type": "boolean"
                },
                "terminal_income": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.JournalOperationInput": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/models.PaymentMethod"
                },
                "supplier_id": {
                    "type": "string"
                },
                "supplier_transaction": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/models.TransactionType"
                }
            }
        },
        "models.NewBranchFinanceInput": {
            "type": "object",
            "properties": {
                "branch_name": {
                    "type": "string"
                },
                "details": {}
            }
        },
        "models.NewJournalEntryInput": {
            "type": "object",
            "properties": {
                "branch_name_or_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "models.Output": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Error"
                    }
                }
            }
        },
        "models.PaymentMethod": {
            "type": "string",
            "enum": [
                "cash",
                "bank",
                "terminal",
                "online_payment",
                "cheque",
                "online_transfer"
            ],
            "x-enum-varnames": [
                "PaymentMethodCash",
                "PaymentMethodBank",
                "PaymentMethodTerminal",
                "OnlineMobileAppPayment",
                "Cheque",
                "OnlineTransfer"
            ]
        },
        "models.SupplierBase": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "inn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "branch_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/models.PaymentMethod"
                },
                "type": {
                    "$ref": "#/definitions/models.InitiatorType"
                }
            }
        },
        "models.TransactionBase": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/models.PaymentMethod"
                },
                "type": {
                    "$ref": "#/definitions/models.TransactionType"
                }
            }
        },
        "models.TransactionOutput": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transaction"
                    }
                },
                "error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Error"
                    }
                }
            }
        },
        "models.TransactionOutputSingle": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Transaction"
                },
                "error": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Error"
                    }
                }
            }
        },
        "models.TransactionType": {
            "type": "string",
            "enum": [
                "credit",
                "debit"
            ],
            "x-enum-comments": {
                "TransactionTypeCredit": "credit means - income - when money is gained or received into an account",
                "TransactionTypeDebit": "debit means - outcome - when money is lost, spent, or withdrawn from an account"
            },
            "x-enum-varnames": [
                "TransactionTypeCredit",
                "TransactionTypeDebit"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
